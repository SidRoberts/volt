# This file is part of Phalcon.
#
# (c) Phalcon Team <team@phalcon.io>
#
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.

name: "Phalcon Volt CI"

on:
  schedule:
    - cron: '0 2 * * *' # Daily at 02:00 runs only on default branch
  push:
    paths-ignore:
      - '**.md'
      - '**.txt'
  pull_request:
  workflow_dispatch:

env:
  fail-fast: true

  # All versions should be declared here
  PHALCON_VERSION: 6.0.0
  CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

  # For tests
  LANG: en_US.UTF-8
  LANGUAGE: en_US.UTF-8
  LC_ALL: en_US.UTF-8

  # Windows specific
  TOOLS_DIR: 'C:\tools'

  # PHP extensions required by Composer
  EXTENSIONS: mbstring

permissions: { }
jobs:
  # PHP CodeSniffer inspection
  phpcs:
    name: "Validate Tests code style"
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    permissions:
      contents: read

    runs-on: ubuntu-20.04

    strategy:
      fail-fast: true
      matrix:
        php:
          - '8.1'
    steps:
      - uses: actions/checkout@v5

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.EXTENSIONS }}
          ini-values: apc.enable_cli=on, session.save_path=/tmp
          tools: pecl
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PHALCON_PATH: ext

      - name: "Install development dependencies with Composer"
        uses: "ramsey/composer-install@v3"
        with:
          composer-options: "--prefer-dist"

      - name: "PHPCS"
        run: |
          composer cs

#      - name: "PHPStan"
#        run: |
#          composer analyze

  unit-tests:
    needs: phpcs

    permissions:
      contents: read # to fetch code (actions/checkout)

    name: Unit tests / PHP-${{ matrix.php }}-${{ matrix.ts }}-${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        php:
          - '8.1'
        ts:
          - 'ts'
        name:
          - ubuntu-gcc
        include:
          # Linux
          - { name: ubuntu-gcc, os: ubuntu-20.04, compiler: gcc }

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: "Setup platform specific environment"
        shell: pwsh
        run: |
          git config --global core.autocrlf false
          $SessionSavePath = if ("${{ runner.os }}" -eq "Windows") { 'C:\temp' } else { '/tmp' }
          Write-Output "SESSION_SAVE_PATH=$SessionSavePath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.EXTENSIONS }}
          tools: pecl, composer:v2
          coverage: xdebug
        env:
          PHPTS: ${{ matrix.ts }}
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: composer validate --no-check-all --no-check-publish
      - run: composer install --prefer-dist

      - name: "Run Unit Tests"
        run: composer test-coverage

      - name: SonarQube Cloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
